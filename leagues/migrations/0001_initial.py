# Generated by Django 5.2.5 on 2025-10-23 13:09

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Dataset League', max_length=100, unique=True)),
                ('country', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=10)),
                ('founded_year', models.PositiveIntegerField(blank=True, null=True)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='leagues.league')),
            ],
            options={
                'unique_together': {('league', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=20)),
                ('played', models.PositiveIntegerField(default=0)),
                ('win', models.PositiveIntegerField(default=0)),
                ('draw', models.PositiveIntegerField(default=0)),
                ('loss', models.PositiveIntegerField(default=0)),
                ('gf', models.IntegerField(default=0)),
                ('ga', models.IntegerField(default=0)),
                ('gd', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standings', to='leagues.league')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season_standings', to='leagues.team')),
            ],
            options={
                'ordering': ['-points', '-gd', '-gf', 'team__name'],
                'unique_together': {('league', 'season', 'team')},
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.CharField(max_length=20)),
                ('date', models.DateTimeField()),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('LIVE', 'Live'), ('FINISHED', 'Finished'), ('POSTPONED', 'Postponed')], default='FINISHED', max_length=10)),
                ('home_score', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('away_score', models.PositiveSmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('home_clearances', models.PositiveIntegerField(default=0)),
                ('home_corners', models.PositiveIntegerField(default=0)),
                ('home_fouls_conceded', models.PositiveIntegerField(default=0)),
                ('home_offsides', models.PositiveIntegerField(default=0)),
                ('home_passes', models.PositiveIntegerField(default=0)),
                ('home_possession', models.FloatField(default=0.0)),
                ('home_red_cards', models.PositiveIntegerField(default=0)),
                ('home_shots', models.PositiveIntegerField(default=0)),
                ('home_shots_on_target', models.PositiveIntegerField(default=0)),
                ('home_tackles', models.PositiveIntegerField(default=0)),
                ('home_touches', models.PositiveIntegerField(default=0)),
                ('home_yellow_cards', models.PositiveIntegerField(default=0)),
                ('away_clearances', models.PositiveIntegerField(default=0)),
                ('away_corners', models.PositiveIntegerField(default=0)),
                ('away_fouls_conceded', models.PositiveIntegerField(default=0)),
                ('away_offsides', models.PositiveIntegerField(default=0)),
                ('away_passes', models.PositiveIntegerField(default=0)),
                ('away_possession', models.FloatField(default=0.0)),
                ('away_red_cards', models.PositiveIntegerField(default=0)),
                ('away_shots', models.PositiveIntegerField(default=0)),
                ('away_shots_on_target', models.PositiveIntegerField(default=0)),
                ('away_tackles', models.PositiveIntegerField(default=0)),
                ('away_touches', models.PositiveIntegerField(default=0)),
                ('away_yellow_cards', models.PositiveIntegerField(default=0)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='leagues.league')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='leagues.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='leagues.team')),
            ],
            options={
                'ordering': ['date'],
                'constraints': [models.CheckConstraint(condition=models.Q(('home_team', models.F('away_team')), _negated=True), name='not_same_team')],
            },
        ),
    ]
